[ { "title": "利用Python抽取DOCX文件中的Comments及其对应的References", "url": "/posts/%E5%88%A9%E7%94%A8python%E6%8A%BD%E5%8F%96docx%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84comments%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E7%9A%84references/", "categories": "Blogging, Solutions", "tags": "Python", "date": "2022-07-27 13:37:00 +0000", "snippet": "docx格式是基于XML的压缩文件格式，在MicroSoft Office 2007之后的版本中使用。下面我来讲讲如何利用Python抽取docx文件中的批注以及其所对应的原文部分。（注：后文我将批注称作comment，将批注所对应的原文部分称为reference）目前网络上已经有博文讲到如何使用Python获取docx文档里的批注，比如： https://blog.csdn.net/qq_43479622/article/details/90580630另外还有使用宏的方法来获取docx文档里批注的，但目前还没看到有博文讲到连同reference一起抽取的，python-docx的仓库里也有人提了issue。使用到的Package： python-docx lxml zipfile import zipfilefrom docx import Documentfrom lxml import etree 定义好XML的namespace：ooXMLns = {&#39;w&#39;: &#39;http://schemas.openxmlformats.org/wordprocessingml/2006/main&#39;}将docx文件解压缩后，word目录下的comments.xml和document.xml文件中记载了comments及其references的信息： 在comments.xml的w:comment标签里，我们可以找到comments相关的信息： w:id属性里记录的是comment的id w:t标签里记录的是comment的内容 在document.xml的w:commentRangeStart和w:commentRangeEnd标签之间，我们可以找到references相关的信息： w:commentRangeStart和w:commentRangeEnd标签中都有w:id属性，对应comment的id 上述两个标签之间的w:r标签中： w:t标签里有w:id对应comment的reference的内容。 获取comment内容的代码： def get_document_comments(docxFileName): &quot;&quot;&quot; Function to extract all the comments of document(Same as accepted answer) Returns a dictionary with comment id as key and comment string as value &quot;&quot;&quot; comments_dict = {} docxZip = zipfile.ZipFile(docxFileName) commentsXML = docxZip.read(&#39;word/comments.xml&#39;) et = etree.XML(commentsXML) comments = et.xpath(&#39;//w:comment&#39;, namespaces=ooXMLns) for c in comments: comment = c.xpath(&#39;string(.)&#39;, namespaces=ooXMLns) comment_id = c.xpath(&#39;@w:id&#39;, namespaces=ooXMLns)[0] comments_dict[comment_id] = comment return comments_dict 获取reference内容的代码： 相比获取comment内容，需要先找到所有w:commentRangeStart节点，然后再移动到其后一个节点去取reference的content。 def get_document_comments_references(docxFileName): &quot;&quot;&quot; Function to extract all the references of comments of document Returns a dictionary with comment id as key and comment reference string as value &quot;&quot;&quot; comments_references_dict = {} docxZip = zipfile.ZipFile(docxFileName) documentXML = docxZip.read(&#39;word/document.xml&#39;) et = etree.XML(documentXML) commentRangeStarts = et.xpath(&#39;//w:commentRangeStart&#39;, namespaces=ooXMLns) for commentRangeStart in commentRangeStarts: commentReferenceElem = commentRangeStart.getnext() commentReference = commentReferenceElem.xpath(&#39;string(.)&#39;, namespaces=ooXMLns) commentReferenceId = commentRangeStart.xpath(&#39;@w:id&#39;, namespaces=ooXMLns)[0] comments_references_dict[commentReferenceId] = commentReference return comments_references_dict参考链接： https://stackoverflow.com/questions/47390928/extract-docx-comments https://stackoverflow.com/questions/27320773/lxml-xml-python-parser-go-to-next-element" }, { "title": "LeetCode 233. 数字 1 的个数", "url": "/posts/leetcode-233-%E6%95%B0%E5%AD%97-1-%E7%9A%84%E4%B8%AA%E6%95%B0/", "categories": "Blogging, 题解", "tags": "leetcode", "date": "2022-05-03 05:11:00 +0000", "snippet": " 同剑指 Offer 43. 1～n 整数中 1 出现的次数 计数问题 枚举每一个数位，分情况讨论该位为1时共有多少种情况 时间复杂度：十进制的数n，会有log~10~n位，枚举每一位时，需要遍历所有数位，故时间复杂度为O(log^2^n) 举例说明枚举一个数位时，该如何分情况进行讨论： 假设n为abcdefg，当前枚举到d，我们希望得知d为1的情况可以有多少种。 如果d数位上的值为0，那么d为1的情况有abc * 1000种，因为d的左边可以取0～abc-1，右边可以取0～999 如果d数位上的值为1，那么d为1的情况有abc * 1000 + efg + 1种： 首先当d的左边取0～abc-1，右边取0～999时，所组成的数字不会大于n，故这些情况都满足。 额外，d的左边取abc时，右边可以取0～efg，所以有efg + 1种情况。 加在一起d为1的情况有abc * 1000 + efg + 1种 如果d数位上的值大于1，那么d为1的情况有(abc + 1) * 1000种，因为d的左边可以取0～abc，右边可以取0～999，所组成的数字不会大于n。 class Solution {public: int countDigitOne(int n) { if (n &amp;lt;= 0) return 0; vector&amp;lt;int&amp;gt; nums; while (n) { nums.push_back(n % 10); n /= 10; } reverse(nums.begin(), nums.end()); int res = 0; for (int i = 0; i &amp;lt; nums.size(); ++i) { int d = nums[i]; int left = 0, right = 0, p = 1; for (int j = 0; j &amp;lt; i; ++j) { left = left * 10 + nums[j]; } for (int j = i + 1; j &amp;lt; nums.size(); ++j) { right = right * 10 + nums[j]; p *= 10; } if (d == 0) res += left * p; else if (d == 1) res += left * p + right + 1; else res += (left + 1) * p; } return res; }};尾注：参考yxc剑指offer讲解" }, { "title": "LeetCode 239. 滑动窗口最大值", "url": "/posts/leetcode-239-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC/", "categories": "Blogging, 题解", "tags": "leetcode", "date": "2022-04-27 10:56:00 +0000", "snippet": " 同剑指 Offer 59 - I. 滑动窗口的最大值 考点：利用单调队列将时间复杂度优化到线性。这道题并不是一开始就能直接想到用单调队列的，首先从暴力做法入手： 窗口需要满足先入先出的特性，所以这里用双端队列来实现窗口，窗口最左边是队首，最右边是队尾。至于为什么是双端，后文会提到。 在窗口满了后，每次移动都遍历窗口一次，求的最大值。假设所有元素数量为n，窗口长度为k。共需要遍历n - k + 1次，每次遍历时间复杂度O(k)，总的时间复杂度为O(nk)。如果想要达到线性的时间复杂度，那么可优化的点在哪里呢？我们把目光放到每次求窗口内最大值，都要遍历一遍上面： 由题意，窗口内越靠左的元素，在窗口内的资历越老，越先出队。如果窗口内靠左的元素小于等于窗口内靠右的元素，那么靠左的元素永远也不可能成为我们所求的答案，因为: 只要该靠左的元素在窗口内存在，那么靠右的元素必存在，甚至是更晚出队。 而且靠右的元素值比靠左的元素大，故该靠左的元素在剩余的生命周期内永无出头之日，输出到答案中时永远也不会考虑它。 在这种情况下，该靠左的元素没有存在在窗口中的意义，把它删去即可。 在对窗口内部元素做了如上优化后，我们发现，队列中从队头到队尾呈现单调下降的趋势，这是一个单调队列。求解窗口内最大值只要返回队列中的队首元素即可，这样就将遍历过程的O(k)优化为了O(1)，总的时间复杂度为O(n)。 为了始终将窗口维护为一个单调队列，我们每次在从队尾插入新元素的时候，都从队尾开始，将所有小于等于新插入元素的数删除，然后再插入新的元素。 细节： 为什么使用双端队列： 因为上面的优化过程需要队列支持一端删除，另一段插入+删除，所以需要使用双端队列。 为什么队列存储的是下标： 因为需要判断队头元素是否已经滑出窗口，这一步需要使用下标。 代码中for循环中有while循环，为什么总的时间复杂度仍是O(n)： 每个元素只会进队一次出队一次，while循环是作出队操作的，对每个元素也就执行1次。 class Solution {public: vector&amp;lt;int&amp;gt; maxSlidingWindow(vector&amp;lt;int&amp;gt;&amp;amp; nums, int k) { deque&amp;lt;int&amp;gt; q; // 队列中存的是下标 vector&amp;lt;int&amp;gt; res; for (int i = 0; i &amp;lt; nums.size(); i ++ ) { // i为队列右端点下标 if (q.size() &amp;amp;&amp;amp; i - k + 1 &amp;gt; q.front()) q.pop_front(); // 因窗口右滑导致最左元素滑出窗口 while (q.size() &amp;amp;&amp;amp; nums[i] &amp;gt;= nums[q.back()]) q.pop_back(); // 维护单调队列，从队尾开始，小于等于新元素的元素都删除 q.push_back(i); // 加入队列 if (i &amp;gt;= k - 1) res.push_back(nums[q.front()]); // 所维护的单调队列的队首始终是窗口内最大值 } return res; }};尾注：参考yxc剑指offer讲解" }, { "title": "LeetCode 426. 将二叉搜索树转化为排序的双向链表", "url": "/posts/leetcode-426-%E5%B0%86%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%8E%92%E5%BA%8F%E7%9A%84%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/", "categories": "Blogging, 题解", "tags": "leetcode", "date": "2022-04-02 14:30:00 +0000", "snippet": " 同剑指 Offer 36. 二叉搜索树与双向链表 由于要求不能创建任何新的节点，只能调整树中节点指针的指向。 二叉搜索树的中序遍历是升序的序列，所以就选择在中序遍历的过程中，调整节点的指针指向，其中： pre指针保存的是当前节点中序遍历的前一个节点地址 访问当前节点时，它的左子树肯定被访问过了，所以当前节点的left指针可以改 pre指向的节点所对应的数一定是小于当前节点的，所以pre的左右子树肯定被访问过了，故pre的right指针也可以直接改 由于是双向循环链表，所以最后需要再将头节点和尾节点相连。/*// Definition for a Node.class Node {public: int val; Node* left; Node* right; Node() {} Node(int _val) { val = _val; left = NULL; right = NULL; } Node(int _val, Node* _left, Node* _right) { val = _val; left = _left; right = _right; }};*/class Solution {public: Node *pre = NULL, *head = NULL; Node* treeToDoublyList(Node* root) { if (!root) { return root; } dfs(root); head-&amp;gt;left = pre; pre-&amp;gt;right = head; return head; } void dfs(Node* root) { if (!root) { return; } dfs(root-&amp;gt;left); if (!head) { head = root; pre = head; } else { pre-&amp;gt;right = root; root-&amp;gt;left = pre; pre = root; } dfs(root-&amp;gt;right); }};尾注：解法参考https://www.acwing.com/solution/content/7465/" }, { "title": "LeetCode 146. LRU缓存", "url": "/posts/leetcode-146-lru%E7%BC%93%E5%AD%98/", "categories": "Blogging, 题解", "tags": "leetcode", "date": "2022-03-27 14:48:00 +0000", "snippet": "这道题要实现LRU缓存机制，包括get和put方法，实际上是要还原这样一个场景：我们有一个缓存，它有固定的大小限制，假设为n。我们需要不断地向其中写入kv键值对，每个键值对占用一个位置。当缓存满了的时候，我们如果再想写入时，需要删掉一个键值对腾出空间。那么我们应该按照什么规则，删除哪个键值对呢？我们就按照LRU的机制来删除。通俗点说LRU机制就是，我们会对每个键值对记录，最近一次用（get，put(插入或修改)）它的时间是什么，给它一个时间戳。需要删除时，我们会根据时间戳把最早的没有被用过的键值对删去。我们需要设计一套存储方式，以便在O(1)的时间复杂度内完成get，put操作。其中我们使用哈希表维护缓存本身的kv键值对，因为哈希表增删改查都是O(1)的。为了实现LRU机制，我们需要在put的时候，能够修改kv对的时间戳，同时我们要能在O(1)的时间复杂度知道哪个kv对相应的时间戳最旧。为了能做到这点，我们用一个双向链表维护LRU的”队列”。双向链表支持用O(1)的时间删除某个位置的节点，也支持用O(1)的时间将节点插入队头。注意，这里不能使用单链表，因为单链表不能支持O(1)的时间删除某个位置的节点。当我们用了（get，put）某个kv对的话，我们将该kv对在双向链表中的节点删掉并插入到队头，这样我们的队尾节点就始终对应时间戳最旧的kv对。如此，双向链表就始终是一个排序后的结果，越往左节点就越新，越往右节点越旧，每次爆缓存的时候，删除最右节点及其对应的kv对即可。class LRUCache {public: struct Node { // 链表节点结构体 int key, val; Node *left, *right; Node(int _key, int _val): key(_key), val(_val), left(NULL), right(NULL) {} }*L, *R; unordered_map&amp;lt;int, Node*&amp;gt; hash; int n; void remove(Node* p) { // 删除双向链表的某个节点 p-&amp;gt;right-&amp;gt;left = p-&amp;gt;left; p-&amp;gt;left-&amp;gt;right = p-&amp;gt;right; } void insert(Node* p) { // 将某个节点插入双向链表的左端 p-&amp;gt;right = L-&amp;gt;right; p-&amp;gt;left = L; L-&amp;gt;right-&amp;gt;left = p; L-&amp;gt;right = p; } LRUCache(int capacity) { // 初始化双向链表 n = capacity; L = new Node(-1, -1), R = new Node(-1, -1); L-&amp;gt;right = R, R-&amp;gt;left = L; } int get(int key) { if (hash.count(key) == 0) return -1; auto p = hash[key]; remove(p); insert(p); return p-&amp;gt;val; } void put(int key, int value) { if (hash.count(key)) { // 改 auto p = hash[key]; p-&amp;gt;val = value; remove(p); insert(p); } else { // 增 if (hash.size() == n) { // 如果缓存满了，利用LRU机制置换页面 auto p = R-&amp;gt;left; remove(p); hash.erase(p-&amp;gt;key); delete p; } auto p = new Node(key, value); hash[key] = p; insert(p); } }};/** * Your LRUCache object will be instantiated and called as such: * LRUCache* obj = new LRUCache(capacity); * int param_1 = obj-&amp;gt;get(key); * obj-&amp;gt;put(key,value); */尾注：参考y总的题解。" }, { "title": "记录我的GitHub Pages博客建立过程", "url": "/posts/%E8%AE%B0%E5%BD%95%E6%88%91%E7%9A%84github-pages%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E8%BF%87%E7%A8%8B/", "categories": "Blogging, Blog", "tags": "blog", "date": "2022-02-18 08:44:00 +0000", "snippet": "用GitHub Pages建立一个博客很简单，只要建立一个.github.io的特殊仓库就可以了（代表所用github账号的用户名）。这篇博客里主要记录了利用Jekyll Theme装点我的博客时踩过的一些坑。我选用的主题是Chirpy Jekyll Theme，根据配置文档进行操作： 安装jekyll时 mac用户建议用brew安装rbenv管理多个ruby版本 用gem安装Jekyll时可能会提示PATH配置有问题，gem不能运行，安装Jekyll后会出现找不到命令的情况，这时候只要将它提示的PATH，用export PATH=${PATH}:PATH加入zshrc或者bashrc文件即可 我选用Using the Chirpy Starter的方式建立.github.io仓库，接下来需要： 将内容clone到本地，并运行bundle命令 然后直接看Deployment这一小节的内容 修改 _config.yml文件，尤其是url要配置正确，否则部署后网页会blank，详见issue。 如果runtime system不是linux，记得使用下面的命令update the platform list in the lock file bundle lock --add-platform x86_64-linux 接着按照Deploy by Using Github Actions这一小节内容照做即可 " }, { "title": "Customize the Favicon", "url": "/posts/customize-the-favicon/", "categories": "Blogging, Tutorial", "tags": "favicon", "date": "2019-08-10 16:34:00 +0000", "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp;amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files: browserconfig.xml site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.The following table will help you understand the changes to the favicon files: File(s) From Online Tool From Chirpy *.PNG ✓ ✗ *.ICO ✓ ✗ ✓ means keep, ✗ means delete.The next time you build the site, the favicon will be replaced with a customized edition." }, { "title": "Writing a New Post", "url": "/posts/write-a-new-post/", "categories": "Blogging, Tutorial", "tags": "writing", "date": "2019-08-08 06:10:00 +0000", "snippet": "This post will guide you how to write a post on Chirpy theme. Even if you have previous experience with Jekyll, this article is worth reading, because many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG] # TAG names should always be lowercase--- The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:---author: name: Full Name link: https://example.com---Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---MermaidMermaid is a great diagrams generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesCaptionAdd italics to the next line of an image，then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image:![Desktop View](/assets/img/sample/mockup.png){: width=&quot;700&quot; height=&quot;400&quot; }Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=&quot;700&quot; h=&quot;400&quot; }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right. Once the position is specified, the image caption should not be added. Normal position Image will be left aligned in below sample: ![Desktop View](/assets/img/sample/mockup.png){: .normal } Float to the left ![Desktop View](/assets/img/sample/mockup.png){: .left } Float to the right ![Desktop View](/assets/img/sample/mockup.png){: .right } ShadowThe screenshots of the program window can be considered to show the shadow effect, and the shadow will be visible in the light mode:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&amp;lt;img src=&quot;https://cdn.com/path/to/flower.png&quot; alt=&quot;The flower&quot;&amp;gt;Image PathWhen a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:---img_path: /img/path/---And then, the image source of Markdown can write the file name directly:![The flower](flower.png)The output will be:&amp;lt;img src=&quot;/img/path/flower.png&quot; alt=&quot;The flower&quot;&amp;gt;Preview ImageIf you want to add an image to the top of the post contents, specify the attribute src, width, height, and alt for the image:---image: src: /path/to/image/file width: 1000 # in pixels height: 400 # in pixels alt: image alternative text---Except for alt, all other options are necessary, especially the width and height, which are related to user experience and web page loading performance. The above section “Size” also mentions this.Starting from Chirpy v5.0.0, the attributes height and width can be abbreviated: height → h, width → w. In addition, the img_path can also be passed to the preview image, that is, when it has been set, the attribute src only needs the image file name.Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&amp;gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Hightlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value``` The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho &#39;No more line numbers!&#39;```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=&quot;path/to/file&quot; }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains &#39;Pack&#39; %} This product&#39;s title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts." }, { "title": "Text and Typography", "url": "/posts/text-and-typography/", "categories": "Blogging, Demo", "tags": "typography", "date": "2019-08-08 03:33:00 +0000", "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphI wandered lonely as a cloudThat floats on high o’er vales and hills,When all at once I saw a crowd,A host, of golden daffodils;Beside the lake, beneath the trees,Fluttering and dancing in the breeze.ListsOrdered list Firstly Secondly ThirdlyUnordered list Chapter Section Paragraph Task list TODO Completed Defeat COVID-19 Vaccine production Economic recovery People smile again Description list Sun the star around which the earth orbits Moon the natural satellite of the earth, visible by reflected light from the sunBlock Quote This line shows the block quote.Prompts An example showing the tip type prompt. An example showing the info type prompt. An example showing the warning type prompt. An example showing the danger type prompt.Tables Company Contact Country Alfreds Futterkiste Maria Anders Germany Island Trading Helen Bennett UK Magazzini Alimentari Riuniti Giovanni Rovelli Italy Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Images Default (with caption)Full screen width and center alignment Shadowshadow effect (visible in light mode) Left aligned Float to left “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.” Float to right “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.” Mermaid SVG gantt title Adding GANTT diagram functionality to mermaid apple :a, 2017-07-20, 1w banana :crit, b, 2017-07-23, 1d cherry :active, c, after b a, 1dMathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blockCommonThis is a common code snippet, without syntax highlight and line number.Specific LanguagesConsole$ env |grep SHELLSHELL=/usr/local/bin/bashPYENV_SHELL=bashShellif [ $? -ne 0 ]; then echo &quot;The command was not successful.&quot;; #do the needful / exitfi;Specific filename@import &quot;colors/light-typography&quot;, &quot;colors/dark-typography&quot;Reverse Footnote The footnote source &amp;#8617; The 2nd footnote source &amp;#8617; " } ]
